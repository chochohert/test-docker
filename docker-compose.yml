version: "3.7"

networks:
    default:
        name: test-docker
volumes:
    code:
    database:

services:
    ngix :
        image: nginx:stable-alpine
        container_name: nginx
        ports:
            - "8000:80"
        volumes:
            - "code:/code"
            - ./docker/default.conf:/etc/nginx/conf.d/default.conf
        depends_on :
            - mysql
            - php
    mysql :
        platform: linux/x86_64
        image: mysql:5.6
        container_name: mysql_container
        ports:
            - "3310:3306"
        tty: true
        environment:
            MYSQL_PORT : ${DB_PORT}
            MYSQL_DATABASE : ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_HOST : ${DB_HOST}
            MYSQL_ROOT_HOST : ${DB_HOST}
            SERVICE_TAGS : dev
            SERVICE_NAME : mysql
    php :
        build:
            context: ./
            dockerfile: ./docker/Dockerfile
        container_name: php
        command: bash -c "/tmp/run.sh && php-fpm"
        ports:
            - '9000:9000'
        environment:
            XDEBUG_MODE: 1
            XDEBUG_REMOTE_ENABLE : 1
            XDEBUG_REMOTE_AUTOSTART: 1
            XDEBUG_MAXNESTING_LEVEL: 1000
            XDEBUG_REMOTE_CONNECT_BACK: 1
            XDEBUG_REMOTE_HOST: host.docker.internal
            XDEBUG_REMOTE_PORT : 9003
            PHP_IDE_CONFIG: serverName=localhost
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE : ${DB_DATABASE}
        volumes:
            - "code:/code"
        depends_on :
            - mysql

x-mutagen:
    sync:
        code:
            alpha: '.'
            beta: 'volume://code'
            configurationBeta:
                permissions:
                    defaultOwner: 'id:33'
                    defaultGroup: 'id:33'
